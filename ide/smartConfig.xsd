<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
           targetNamespace="https://platform.anakeen.com/4/schemas/smart/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ui="https://platform.anakeen.com/4/schemas/ui/1.0"
           xmlns:wfl="https://platform.anakeen.com/4/schemas/workflow/1.0"
           xmlns:mail="https://platform.anakeen.com/4/schemas/mailtemplate/1.0"
           xmlns:timer="https://platform.anakeen.com/4/schemas/timer/1.0"
           xmlns:v1="https://platform.anakeen.com/4/schemas/smart/1.0">
    <xs:import namespace="https://platform.anakeen.com/4/schemas/ui/1.0"/>
    <xs:import namespace="https://platform.anakeen.com/4/schemas/workflow/1.0"/>
    <xs:import namespace="https://platform.anakeen.com/4/schemas/mailtemplate/1.0"/>
    <xs:import namespace="https://platform.anakeen.com/4/schemas/timer/1.0"/>
    <xs:element name="config" type="v1:configType">
        <xs:annotation>
            <xs:documentation>
                <h1>Smart Configuration</h1>
                <p>To configure Smart Structure and Smart Access</p>
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="configType">
        <xs:sequence>
            <xs:element ref="mail:mailtemplate" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="timer:timer" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="wfl:config" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:accessConfigurationType" name="access-configuration" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:structure-configurationType" name="structure-configuration" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Smart Structure Configuration</h1>
                        <p>To configure Smart Structure parts such as attributes, parameters, default values</p>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="v1:enumeratesType" name="enumerates" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:fieldAccessLayerType" name="field-access-layer" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:fieldAccessLayerListType" name="field-access-layer-list" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ui:mask" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ui:view-control" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="ui:render" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="field-returnType">
        <xs:attribute type="v1:attrNameType" name="field"/>
    </xs:complexType>

    <xs:complexType name="field-overrideType">
        <xs:complexContent>
            <xs:extension base="v1:field-propsStandardType">
                <xs:attribute type="v1:attrNameType" name="field" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="field-autocompleteType">
        <xs:sequence>
            <xs:element type="v1:field-callableType" name="field-callable"/>
            <xs:element type="v1:field-argumentType" name="field-argument" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="v1:field-returnsType" name="field-returns" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="v1:attrNameType" name="field"/>
    </xs:complexType>

    <xs:simpleType name="attrReturnArgType">
        <xs:annotation>
            <xs:documentation>Type of argument</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="field"/>
            <xs:enumeration value="string"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="fieldAccessType">
        <xs:annotation>
            <xs:documentation>Field Access</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="Write"/>
            <xs:enumeration value="Read"/>
            <xs:enumeration value="ReadWrite"/>
            <xs:enumeration value="None"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="profilPolicyType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="ADD"/>
            <xs:enumeration value="SET"/>
            <xs:enumeration value="RESET"/>
            <xs:enumeration value="DELETE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fieldsetType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="frame"/>
            <xs:enumeration value="tab"/>
            <xs:enumeration value="array"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="enumeratesType">
        <xs:sequence>
            <xs:element type="v1:enum-configurationType" name="enum-configuration" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="field-optionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="enumType">
        <xs:sequence maxOccurs="unbounded" minOccurs="0">
            <xs:element type="v1:enumType" name="enum"/>
        </xs:sequence>
        <xs:attribute type="xs:token" name="name"/>
        <xs:attribute type="xs:string" name="label"/>
    </xs:complexType>

    <xs:complexType name="enum-configurationType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="v1:enumType" name="enum"/>
        </xs:choice>
        <xs:attribute type="xs:token" name="name"/>
        <xs:attribute type="xs:boolean" name="extendable" default="false"/>
    </xs:complexType>

    <xs:complexType name="field-propsStandardType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element type="v1:field-optionType" name="field-option"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="xs:boolean" name="needed"/>
        <xs:attribute type="v1:fieldAccessType" name="access" use="required">
            <xs:annotation>
                <xs:documentation>
                    <p>
                        <b>Field Access</b>
                    </p>
                    <hr/>
                    <ul>
                        <li>ReadWrite : For Read Write</li>
                        <li>Read : For ReadOnly</li>
                        <li>Write : For Write only</li>
                        <li>None : For no access</li>
                    </ul>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:boolean" name="is-abstract" default="false"/>
        <xs:attribute type="xs:boolean" name="is-title" default="false"/>
        <xs:attribute type="xs:string" name="link"/>
        <xs:attribute type="xs:boolean" name="multiple"/>
    </xs:complexType>

    <xs:complexType name="field-standardType">
        <xs:complexContent>
            <xs:extension base="v1:field-propsStandardType">
                <xs:attribute type="v1:attrNameType" name="name" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="attrNameType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-z][a-z0-9_]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="logicalNameType">
        <xs:restriction base="xs:token">
            <xs:pattern value="[A-Za-z][A-Za-z0-9_-]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="field-formatType">
        <xs:complexContent>
            <xs:extension base="v1:field-standardType">
                <xs:attribute type="xs:string" name="format"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="field-relationType">
        <xs:complexContent>
            <xs:extension base="v1:field-standardType">
                <xs:attribute type="xs:token" name="relation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="field-enumType">
        <xs:complexContent>
            <xs:extension base="v1:field-standardType">
                <xs:attribute type="xs:token" name="relation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="fieldAccessLayerListType">
        <xs:sequence>
            <xs:element type="xs:string" name="description" minOccurs="0"/>
            <xs:element type="v1:fieldAccessLayerType" name="field-access-layer" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Smart Structure Access Configuration</h1>
                        <p>To configure rights to access to data</p>

                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="v1:logicalNameType" name="name" use="required"/>
        <xs:attribute type="v1:logicalNameType" name="structure"/>
        <xs:attribute type="xs:string" name="label"/>
    </xs:complexType>


    <xs:complexType name="fieldAccessLayerType">
        <xs:sequence>
            <xs:element type="xs:string" name="description" minOccurs="0"/>
            <xs:element type="v1:fieldSetAccessType" name="field-access" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Field Access Rights</h1>
                        <p>Add new access right</p>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="v1:logicalNameType" name="name"/>
        <xs:attribute type="v1:logicalNameType" name="structure"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="xs:token" name="access-name"/>
        <xs:attribute type="v1:logicalNameType" name="ref"/>
        <xs:attribute type="v1:logicalNameType" name="access-structure"/>
    </xs:complexType>

    <xs:complexType name="fieldSetAccessType">
        <xs:attribute type="v1:attrNameType" name="field"/>
        <xs:attribute type="v1:fieldAccessType" name="access"/>
    </xs:complexType>

    <xs:complexType name="accessConfigurationType">
        <xs:sequence>
            <xs:element type="xs:string" name="description" minOccurs="0"/>
            <xs:element type="v1:accessType" name="element-access" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Smart Structure Access Configuration</h1>
                        <p>To configure rights to access to data</p>
                        <p>Main rights are:
                            <ul>
                                <li>view :
                                    <i>to access to smart element data</i>
                                </li>
                                <li>edit :
                                    <i>to modify to smart element data</i>
                                </li>
                                <li>delete :
                                    <i>to delete the smart element</i>
                                </li>
                                <li>create (for PFAM profil) :
                                    <i>to create a new smart element</i>
                                </li>
                                <li>icreate (for PFAM profil) :
                                    <i>to authorize interactive creation of new smart element</i>
                                </li>
                            </ul>
                        </p>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="v1:logicalNameType" name="name"/>
        <xs:attribute type="xs:token" name="type"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="v1:profilPolicyType" name="policy" default="ADD">
            <xs:annotation>
                <xs:documentation>
                    <p>Policy to use when set profil access</p>
                    <ul>
                        <li>ADD (the default): : Add access and update rights only if changed</li>
                        <li>SET : Add access and update always rights</li>
                        <li>RESET : Remove all predefined rights to replace them</li>
                        <li>DELETE : Delete rights</li>
                    </ul>

                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="v1:logicalNameType" name="ref"/>
        <xs:attribute type="v1:logicalNameType" name="access-structure">
            <xs:annotation>
                <xs:documentation>
                    <h1>Dynamic Profil</h1>
                    <p>Indicate that account attributes of linked structure can be use in acl configuration</p>
                    <p>If it is set, all smart element linked with its profil are a computed profil. When the right of this profil change, all linked computed profile are reseted.
                        May take long time to proceed (depends of number of linked profil)
                    </p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute type="v1:logicalNameType" name="profil-type" default="PDOC"/>
    </xs:complexType>

    <xs:complexType name="field-accountType" mixed="true">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="v1:field-standardType" name="field-text"/>
            <xs:element type="v1:field-standardType" name="field-enum"/>
            <xs:element type="v1:field-standardType" name="field-docid"/>
            <xs:element type="v1:field-standardType" name="field-int"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="name"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="v1:fieldAccessType" name="access"/>
        <xs:attribute type="xs:string" name="extended"/>
        <xs:attribute type="xs:string" name="type"/>
    </xs:complexType>
    <xs:complexType name="field-argumentType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="v1:attrReturnArgType" name="type" use="required"/>
                <xs:attribute type="xs:token" name="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="structure-configurationType">
        <xs:sequence>
            <xs:element type="v1:extendsType" name="extends" minOccurs="0"/>
            <xs:element type="xs:string" name="default-folder" minOccurs="0"/>
            <xs:element type="v1:iconType" name="icon" minOccurs="0"/>
            <xs:element type="v1:classType" name="class" minOccurs="0">

                <xs:annotation>
                    <xs:documentation>
                        <h1>PHP Class</h1>
                        <p>This property indicate a complete PHP (including namespace).</p>
                        <p>This class is used to declare hooks and to add functionnalities to the Smart Structure</p>
                        <em>This class must extends the standard SmartElement class if the Smart Structure not extends another Smart Structure</em>
                    </xs:documentation>
                </xs:annotation>

            </xs:element>
            <xs:element type="v1:revisableType" name="revisable" default="default" minOccurs="0"/>
            <xs:element type="xs:string" name="usefor" minOccurs="0"/>
            <xs:element type="v1:tagType" name="tag" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:attributesType" name="fields" minOccurs="0"/>
            <xs:element type="v1:attributesType" name="parameters" minOccurs="0"/>
            <xs:element type="v1:field-overrideType" name="field-override" minOccurs="0"/>
            <xs:element type="v1:hooksType" name="hooks" minOccurs="0"/>
            <xs:element type="v1:extendsType" name="default-workflow" minOccurs="0"/>
            <xs:element type="v1:autocompletionType" name="autocompletion" minOccurs="0"/>
            <xs:element type="v1:defaultsType" name="defaults" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Indicates defaults values used when create new smart element</h1>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="v1:accessesType" name="accesses" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="v1:logicalNameType" name="name"/>
        <xs:attribute type="xs:int" name="id"/>
        <xs:attribute type="xs:string" name="label"/>
    </xs:complexType>
    <xs:complexType name="attributesType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="v1:field-setType" name="field-set">
                <xs:annotation>
                    <xs:documentation>Smart Fieldset of attributes</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="defaultsType">
        <xs:sequence>
            <xs:element type="v1:defaultType" name="default" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="v1:defaultType" name="initial" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="accessesType">
        <xs:sequence>
            <xs:element type="v1:accessConfigurationType" name="structure-access-configuration" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Access to the smart structure</h1>
                        <h2>Define also right to create smart element of this structure</h2>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="v1:accessConfigurationType" name="element-access-configuration" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Smart Element Access Configuration</h1>
                        <h2>To configure rights for new Smart Elements of this structure</h2>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element type="v1:accessConfigurationType" name="field-access-configuration" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        <h1>Field Access Configuration</h1>
                        <h2>To configure access rights of specific fields</h2>
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="extendsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="v1:logicalNameType" name="ref" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="accessType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:token" name="ref"/>
                <xs:attribute type="xs:token" name="account"/>
                <xs:attribute type="xs:token" name="access"/>
                <xs:attribute type="v1:attrNameType" name="field"/>
                <xs:attribute type="v1:logicalNameType" name="element"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <xs:complexType name="defaultType" mixed="true">
        <xs:sequence>
            <xs:element type="v1:field-callableType" name="field-callable" minOccurs="0"/>
            <xs:element type="v1:field-argumentType" name="field-argument" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="v1:field-returnsType" name="field-returns" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="v1:attrNameType" name="field" use="required"/>
        <xs:attribute type="xs:boolean" name="reset" default="false"/>
    </xs:complexType>

    <xs:complexType name="field-callableType">
        <xs:attribute type="xs:string" name="function"/>
        <xs:attribute type="xs:string" name="external-file"/>
    </xs:complexType>


    <xs:complexType name="classType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:boolean" name="disable-inheritance-condition"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <xs:complexType name="tagType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:token" name="name" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="iconType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="file"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="revisableEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default"/>
            <xs:enumeration value="false"/>
            <xs:enumeration value="auto"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="revisableType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="v1:revisableEnum">
                <xs:attribute name="max" type="xs:int"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="field-returnsType">
        <xs:sequence>
            <xs:element type="v1:field-returnType" name="field-return" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="autocompletionType">
        <xs:sequence>
            <xs:element type="v1:field-autocompleteType" name="field-autocomplete" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="field-hookType">
        <xs:sequence>
            <xs:element type="v1:field-callableType" name="field-callable"/>
            <xs:element type="v1:field-argumentType" name="field-argument" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="v1:field-returnType" name="field-return" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="event"/>
        <xs:attribute type="v1:attrNameType" name="field"/>
        <xs:attribute type="xs:string" name="type"/>
    </xs:complexType>
    <xs:complexType name="hooksType">
        <xs:sequence>
            <xs:element type="v1:field-hookType" name="field-hook" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="field-setType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="v1:field-setType" name="field-set"/>
            <xs:element type="v1:field-standardType" name="field-date"/>
            <xs:element type="v1:field-formatType" name="field-time"/>
            <xs:element type="v1:field-formatType" name="field-int"/>
            <xs:element type="v1:field-formatType" name="field-double"/>
            <xs:element type="v1:field-formatType" name="field-money"/>
            <xs:element type="v1:field-standardType" name="field-color"/>
            <xs:element type="v1:field-formatType" name="field-timestamp"/>
            <xs:element type="v1:field-standardType" name="field-password"/>
            <xs:element type="v1:field-formatType" name="field-text"/>
            <xs:element type="v1:field-standardType" name="field-longtext"/>
            <xs:element type="v1:field-standardType" name="field-htmltext"/>
            <xs:element type="v1:field-standardType" name="field-file"/>
            <xs:element type="v1:field-standardType" name="field-image"/>
            <xs:element type="v1:field-enumType" name="field-enum"/>
            <xs:element type="v1:field-relationType" name="field-docid"/>
            <xs:element type="v1:field-relationType" name="field-account"/>
            <xs:element type="v1:field-standardType" name="field-xml"/>
            <xs:element type="v1:field-standardType" name="field-json"/>
            <xs:element type="v1:field-optionType" name="field-option"/>
        </xs:choice>
        <xs:attribute type="v1:attrNameType" name="name" use="required"/>
        <xs:attribute type="xs:boolean" name="extended"/>
        <xs:attribute type="v1:fieldsetType" name="type" use="required"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="v1:fieldAccessType" name="access"/>
        <xs:attribute type="xs:string" name="relation"/>
        <xs:attribute type="xs:string" name="multiple"/>
        <xs:attribute type="xs:string" name="is-abstract"/>
        <xs:attribute type="xs:string" name="link"/>
    </xs:complexType>
</xs:schema>