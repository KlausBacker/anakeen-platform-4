.dcpArray__head__toolCell, .dcpArray__content__toolCell {
  width: 9.6em;
  font-size: 80%;
}
.dcpArray__head__cell {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.dcpArray__content__cell .dcpAttribute__value {
  overflow-x:auto;
  display:block;
  height: auto;
}
.dcpArray__content__toolCell__check, .dcpArray__content__toolCell__delete {
  cursor: pointer;
  float: left;
}
.dcpArray__content__toolCell .fa {
  font-size:1.5em;
}
.dcpArray__content__toolCell__check input[type=radio] {
  width:1.8em;
  height: 1.8em;
  margin-left:1em;
  -moz-transform: scale(1.3, 1.3); // Firefox not support width yet
  margin-top: 2px;
}
.dcpArray__content__toolCell__dragDrop {
  cursor: move;
  float: left;
}

.dcpArray__content__toolCell__delete {
  float: right;
  visibility: hidden;
}

.dcpArray__content__line--selected .dcpArray__content__toolCell__delete {
  visibility: visible;
}

.dcpDocument--edit {
  .dcpAttribute--needed.dcpArray__head__cell:after {
    content: "*";
    padding-left: 0.1em;
  }
}

.dcpArray__button {
  display:inline-block;
}

.dcpArray__dragLine {
  background-color: fade(@brand-primary, 90%);
  cursor: move;
  margin: 0;
  opacity: 0.9;
}
// More priority than bootstrap
.table-hover.dcpArray__dragLine > tbody > tr:hover
{
  background-color: fade(@brand-primary, 90%);
}
.dcpArray__dragLine input,
.dcpArray__dragLine button,
.dcpArray__dragLine .k-input,
.dcpArray__dragLine .k-button {
  cursor: move;
}

.dcpArray__dragLine .dcpArray__content__toolCell,
.dcpArray__dragLine .dcpArray__content__line--selected .dcpArray__content__toolCell__delete {
  visibility: hidden;
}

.dcpArray--error {
  outline: solid 1px @brand-danger;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px fadein(@brand-danger, 60%);
}

.dcpArray__label--count::after {
  content: ")"
}

.dcpArray__label--count::before {
  content: "("
}

/**
 * To fix all width column to be proportionnal to thead
 */
.dcpArray__content table {
  table-layout: fixed;
}

.dcpArray__label {
  cursor: pointer;
}

.dcp__array__caret {
  width: 1em;
}

table.responsive {
  border-collapse: collapse;
}

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
  table.responsive {
    width: 100%;
  }

  /* Force table to not be like tables anymore */
  table.responsive, table.responsive tbody, table.responsive th, table.responsive td, table.responsive tr {
    display: block;
  }

  table.responsive thead {
    display: none;
  }

  .dcpArray__content__toolCell__delete {
    float: left;
  }

  /* Hide table headers (but not display: none;, for accessibility) */
  table.responsive th {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  table.responsive tr {
    border-color: @gray-lighter;
    border-width: 1px;
    border-style: none solid solid solid;
  }

  table.responsive tr:nth-of-type(even) {
    background-color: @gray-lighter;
  }

  table.responsive > tbody > tr > td {
    /* Behave  like a "row" */
    border-bottom: 1px solid #eee;
    position: relative;
    padding-left: 50%;
    min-height: 3em;
    &:before,
    &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
  }

  table.responsive .dcpAttribute__content:before {
    /* Now like a table header */
    position: absolute;
    /* Top/left values mimic padding */
    top: 6px;
    left: 6px;
    width: 45%;
    padding-right: 10px;
    word-break: break-word;
  }

  .dcpArray__content__toolCell, table.responsive > tbody > tr > td.dcpArray__content__toolCell {
    width: 100%;
    border-top: 0;
    padding-left: 5px;
  }

}