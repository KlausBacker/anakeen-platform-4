version: '3'

services:
  transformation-server:
    build:
      context: './Addons/transformation-server'
      args:
        ANK_RUN_UID: ${COMPOSE_UID}
        ANK_RUN_GID: ${COMPOSE_GID}
        PROJECT_TRANSFORMATION_SERVER_PHP_VERSION: ${PROJECT_TRANSFORMATION_SERVER_PHP_VERSION}
    sysctls:
      # Allows mapping of port 80 from unprivileged user COMPOSE_UID
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - './Volumes/_private/webroot/var/www/html/anakeen/certs/:/usr/local/share/ca-certificates/anakeen-certs/'
      - '../../transformation-server/:/opt/transformation-server/'
      - './Volumes/transformation-server/opt/transformation-server/etc/te.conf:/opt/transformation-server/etc/te.conf'
      - '../../build/:/build'
    environment:
      RESET_ON_START: 'no'
      PG_SERVER_NAME: 'postgres'
      PG_SERVER_PORT: '5432'
      PG_SERVER_DBNAME: 'te'
      PG_SERVER_USER: 'te'
      PG_SERVER_PASSWORD: 'secret'
      TRANSFORMATION_SERVER_ZIP_FILE: '/build/transformation-server/transformation-server-latest.zip'
      CUSTOM_SETUP_SCRIPT: ''
      TE_SERVER_DEBUG: 'no'
    depends_on:
      - 'postgres'
    ports:
      - '${PROJECT_TE_PORT-51968}:51968'
    networks:
      internal:
        aliases:
          - 'transformation-server'
          - 'te'
  # Add custom initdb script in postgres container
  postgres:
    volumes:
      - './Volumes/postgres/docker-entrypoint-initdb.d/20-initdb-te.sh:/docker-entrypoint-initdb.d/20-initdb-te.sh'

networks:
  internal: {}
