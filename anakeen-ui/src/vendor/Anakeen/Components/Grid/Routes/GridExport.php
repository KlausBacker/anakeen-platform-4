<?php
/**
 * Created by PhpStorm.
 * User: aurelien
 * Date: 18/09/18
 * Time: 14:52
 */
namespace Anakeen\Components\Grid\Routes;

use Anakeen\Core\Utils\FileMime;
use Anakeen\Router\ApiV2Response;
use Anakeen\Router\Exception;
use Anakeen\SmartElementManager;
use Box\Spout\Reader\ReaderFactory;
use Box\Spout\Writer\WriterFactory;
use Box\Spout\Common\Type;

require_once "vendor/Anakeen/Ui/PhpLib/vendor/box/spout/src/Spout/Autoloader/autoload.php";

class GridExport extends GridContent {

    public function __invoke(\Slim\Http\request $request, \Slim\Http\response $response, $args)
    {
        $parentResponse = parent::__invoke($request, $response, $args); // TODO: Change the autogenerated stub

        $data = $this->getData();


        $writer = WriterFactory::create(Type::XLSX);
        $writer->openToFile("export.xlsx");



        $writer->addRow(["Test 1", 354, null, '', true]); // add a row at a time
        $writer->addRow(["Test 3", 3804, null, '', true]); // add a row at a time
        $writer->addRow(["Test 4", 1023, null, '', true]); // add a row at a time

        $writer->close();

        return self::withFile($response, "./export.xlsx", "export.xlsx");
    }

    public static function withFile(
        \Slim\Http\response $response,
        $filePath,
        $fileName = "",
        $mime = ""
    ) {
        if (!$fileName) {
            $fileName = basename($filePath);
        }
        if (!file_exists($filePath)) {
            throw new Exception("GRID0003", basename($filePath));
        }
        if (!$mime) {
            $mime = FileMime::getSysMimeFile(realpath($filePath), $fileName);
        }

        if ($mime) {
            $response = $response->withHeader("Content-type", $mime);
        }

        return $response->write(file_get_contents($filePath));
    }


}