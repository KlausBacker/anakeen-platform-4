<?php

namespace Anakeen\Components\Grid\Routes;

use Anakeen\Core\ContextManager;
use Anakeen\Core\Internal\Format\FormatAttributeValue;
use Anakeen\Core\Internal\SmartElement;
use Anakeen\Core\SEManager;
use Anakeen\Core\Settings;
use Anakeen\Router\URLUtils;
use Anakeen\Ui\DataSource;

class GridContent extends DataSource
{
    protected function getData()
    {
        $data = parent::getData();
        if (isset($this->smartElementId)) {
            $data["uri"] = URLUtils::generateURL(Settings::ApiV2 . sprintf("grid/content/%s", $this->smartElementId));
        }
        $data["uri"] = URLUtils::generateURL(Settings::ApiV2 . sprintf("grid/content/"));

        if (ContextManager::getParameterValue("Ui", "MODE_DEBUG")) {
            $data["debug"]=$this->_searchDoc->getSearchInfo();
        }
        $data["requestParameters"]["pager"]=array(
            "page" => intval($this->page),
            "skip" => intval($this->_searchDoc->start),
            "take" => intval($this->_searchDoc->slice),
            "pageSize" => intval($this->pageSize),
            "total" => intval($this->_searchDoc->onlyCount()),
        );


        return $data;
    }

    protected static function formatProperty($propertyValue, $propertyId, SmartElement $smartEl)
    {
        $propertyInfo = [];
        switch ($propertyId) {
            case "mdate":
            case "cdate":
                $propertyInfo["value"] = $propertyValue;
                $propertyInfo["displayValue"] = $propertyValue;
                break;
            case "title":
                $propertyInfo["value"] = $propertyValue;
                $propertyInfo["displayValue"] = $propertyValue;
                $propertyInfo["iconUrl"] = $smartEl->getIcon("", 24);
                break;
            case "fromid":
                $propertyInfo["value"] = $propertyValue;
                $propertyInfo["displayValue"] = null;
                $propertyInfo["url"] = "";
                $propertyInfo["icon"] = "";
                $propertyInfo["name"] = "";
                if (!empty($propertyValue)) {
                    $structure = SEManager::getFamily($propertyValue);
                    if (!empty($structure)) {
                        $propertyInfo["displayValue"] = $structure->getTitle();
                        $propertyInfo["icon"] = $structure->getIcon("", 24);
                        $propertyInfo["name"] = $structure->name;
                    }
                }
                break;
            default:
                return $propertyValue;
        }
        return $propertyInfo;
    }

    protected function prepareDocumentFormatter($documentList)
    {
        $formatter = parent::prepareDocumentFormatter($documentList); // TODO: Change the autogenerated stub
        $formatter->getFormatCollection()->setPropertyRenderHook(function (...$args) {
            return static::formatProperty(...$args);
        });
        return $formatter;
    }
}
