<?php


namespace {

[include]
[IF GEN] require_once "FDL[GEN]/Class.[FileClassParent].php"; [ENDIF GEN]
class ADoc[docid] extends [AParent] {
    // for familly : [title]

   function __construct () {
      [AParent]::__construct();

     [BLOCK AATTR]
     $this->attr["[attrid]"]=new ActionAttribute("[attrid]", "[docid]","[label]",[order],"[visibility]","[wapplication]","[waction]","[precond]","[options]","[docName]");    
     [ENDBLOCK AATTR]
     [BLOCK MATTR]
     $this->attr["[attrid]"]=new MenuAttribute("[attrid]", "[docid]","[label]",[order],"[link]","[visibility]","[precond]","[options]","[docName]");    
     [ENDBLOCK MATTR]
     [BLOCK FATTR]
     $this->attr["[attrid]"]=new FieldSetAttribute("[attrid]", "[docid]","[label]","[visibility]","[usefor]","[type]",$this->attr["[frame]"],"[options]","[docName]");
     [ENDBLOCK FATTR]
     [BLOCK NATTR]
     $this->attr["[attrid]"]=new NormalAttribute("[attrid]", "[docid]","[label]","[type]","[format]",[repeat],[order],"[link]",
                                                "[visibility]",[needed],[title],[abstract],
						$this->attr["[frame]"],"[phpfile]","[phpfunc]","[elink]","[phpconstraint]","[usefor]","[eformat]","[options]","[docName]");

     [ENDBLOCK NATTR]
		[IF sAbsoluteOrders]
	 $this->absoluteOrders=[[sAbsoluteOrders]];[ENDIF sAbsoluteOrders]
     $this->fromids[[docid]]=[docid];
     $this->fromname='[docName]';
[BLOCK ATTRFIELD]
    $this->fields["[attrid]"]="[attrid]";[ENDBLOCK ATTRFIELD]
   }
}


        }

namespace {

        [IF STARMETHOD]
// redirect class : to simulate double inherit
class [docNameIndirect] extends [RedirectDocParent] {
   [METHODS2]
}
        [ENDIF STARMETHOD]

[IF METHODS]
class [PHPmethodName] extends [ClassDocParent] {
   [METHODS]
   [HOOKALIAS]

}
[ENDIF METHODS]
}

namespace Dcp\Family {
class [PHPclassName] extends [DocParent] {
   //  family : [title]

   public $dbtable="doc[docid]";
   public $dbseq="seq_doc[docid]";
   public $sqlcreate = array("create table doc[docid] ([sattr]) inherits (doc[fromid]);",
     "create sequence seq_doc[docid] start 1;",
     "alter TABLE doc[docid] ADD primary key (id);",
     "select setval('seq_doc[docid]', count(distinct initid)+1, false )  from only doc[docid];");
   

     public $fromid=[docid];
     public $fromname='[docName]';
     public $fromtitle="[docTitle]";
     const familyName='[docName]';

   function __construct ($dbaccess='', $id='',$res='',$dbid=0) {
        if (empty($this->attributes)) {
           $this->attributes = new \ADoc[docid]();
          if (isset($this->attributes->fields))  $this->fields += $this->attributes->fields;
        }
        parent::__construct($dbaccess, intval($id), $res, $dbid);
        $this->postConstructor();
   }

   function SpecRefreshGen($onlyspec=false) {
       $err = parent::specRefreshGen();
[BLOCK ACALC]
       $err .= ($err!=''?"\n":'') . $this->specRefreshGenAttribute("[callattr]", "[callmethod]");
[ENDBLOCK ACALC]

       return $err;
   }
   


}
}
     [BLOCK CLASSALIAS]
// alias name for the class
namespace {
    class_alias('\Dcp\Family\[PHPclassName]','_[PHPclassName]');
    class_alias('\Dcp\Family\[PHPclassName]' , 'Doc[docid]');
}
[ENDBLOCK CLASSALIAS]
