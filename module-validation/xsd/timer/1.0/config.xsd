<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
           targetNamespace="https://platform.anakeen.com/4/schemas/timer/1.0"
           xmlns:ns="https://platform.anakeen.com/4/schemas/timer/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- timer data part -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="timer" type="ns:timerType"/>
    <xs:complexType name="field-date-referenceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="ns:fieldName" name="ref"/>
                <xs:attribute type="xs:string" name="delta"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="sendmailType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="ns:elementName" name="ref"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="taskType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="ns:sendmailType" maxOccurs="unbounded" name="sendmail"/>
            <xs:element type="ns:setstateType" maxOccurs="1" name="setstate"/>
            <xs:element type="ns:processType" name="process"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="delta"/>
    </xs:complexType>
    <xs:complexType name="setstateType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="state"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="process-callableType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="function" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="process-argumentType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="ns:processArgType" name="type" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="processType">
        <xs:sequence>
            <xs:element type="ns:process-callableType" name="process-callable"/>
            <xs:element type="ns:process-argumentType" name="process-argument" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="tasksType">
        <xs:sequence>
            <xs:element type="ns:taskType" name="task" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="timerType">
        <xs:sequence>
            <xs:element type="ns:field-date-referenceType" name="field-date-reference"/>
            <xs:element type="ns:tasksType" name="tasks"/>
        </xs:sequence>
        <xs:attribute type="ns:elementName" name="name" use="required"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="ns:elementName" name="structure"/>
        <xs:attribute type="ns:elementName" name="workflow"/>
    </xs:complexType>
    <xs:simpleType name="processArgType">
        <xs:annotation>
            <xs:documentation>
                <h1>Process argument type</h1>
                <ul>
                    <li>
                        <code>string</code>
                        : the text is used dircectly as argument value
                    </li>
                    <li>
                        <code>field</code>
                        : the field value of element is used as argument value
                    </li>
                </ul>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="string"/>
            <xs:enumeration value="field"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ~~~~~~~~~~~~~~~~~ -->
    <!--    Basic type     -->
    <!-- ~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="fieldName">
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-z][a-z0-9_]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="elementName">
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-zA-Z][A-Za-z0-9_-]+"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>