@import "../../../../../STYLE/DDUI/dduiAssets/variables";

.dcpAttribute--type--enum .dcpAttribute__value--multiple .dcpAttribute__content__value {
  display: block;
  float: left;
  clear: both;
}

.dcpAttribute__content .k-dropdown-wrap {
  height: (@attrInputHeight );
  box-sizing: border-box;
}

.dcpAttribute__content .k-dropdown-wrap .k-input {
  height: (@attrInputHeight  - 2);
  padding-top: 6px;
  box-sizing: border-box;
}

.dcpAttribute__content .k-dropdown-wrap input.k-input {
  padding-top: 4px;
}

/* set icon in right */
.dcpAttribute__content .k-dropdown-wrap {
  padding-left: 1.9em;
  padding-right: 0;
}

/* set icon in right */
.dcpAttribute__content .k-dropdown-wrap .k-select {
  left: 0;
  right: auto;
  border: none;
  padding-top: 4px;
  height: (@attrInputHeight  - 4);
}

.dcpAttribute__content .k-dropdown,
.dcpAttribute__content .k-multiselect,
.dcpAttribute__content .k-combobox {
  padding: 0;
}

.dcpAttribute__content .k-multiselect {
  height: auto;
  min-height: @attrInputHeight - 2;
}
.dcpAttribute__content .k-multiselect .k-button {
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin-top: 0.3em;
  margin-left: 0.4em;
  margin-bottom: 0.2em;
  line-height: normal;
}

.dcpAttribute__content .k-multiselect-wrap {
  border-radius: inherit;
  //padding: 2px;
  min-height: @attrInputHeight - 2;
}

.dcpAttribute__content.has-error .k-dropdown-wrap {
  border-color: @brand-danger transparent @brand-danger @brand-danger;
}

.k-list-optionlabel {
  color: @gray-light;
}
.k-list-optionlabel.placeholder--clear {
  display: none; /* no view place holder choice */
}

.k-dropdown span.k-input.placeholder,
.k-multiselect .k-input.k-readonly,
.k-dropdown .placeholder
{
  color: @gray-light;
}

.dcpAttribute__content--enum .k-multiselect .k-button {
  color: @text-color;
  border-color: darken(@gray-lighter, 5%);
  background-color: @gray-lighter;
}

.dcpAttribute__content--enum .k-multiselect .k-button:active {
  box-shadow: inset 0 0 10px 3px darken(@gray-lighter, 8%);
}

.dcpAttribute__content .dcpAttribute__value--enumlabel {
  input[type=radio], input[type=checkbox] {
    height: auto;
    width: auto;
    background-color: transparent;
    border: none;
    /*display:none; *//* no see native radio */
  }

  input.dcpAttribute__value--enum--other {
    height: @attrInputHeight - 6px;
    width: ~"calc(100% - 2.5em)";

  }
}


.dcpAttribute__value--enumlabel.k-button {
  border-radius: 0;
  border-style: none solid none none;
  padding-top: 2px;
  padding-bottom: 2px;
}

/*
.dcpAttribute--type--enum .dcpAttribute__value--enumlabel.k-button:first-child {
  border-radius:4px 0 0 4px;
}
*/
.dcpAttribute__value--enumbuttons.orientation-bool.input-group .dcpAttribute__value--enumlabel {
  border-right-style: none;
  border-radius: @border-radius-base;
}

.dcpAttribute__value--enumbuttons.orientation-horizontal.input-group .dcpAttribute__value--enumlabel:last-child {
  border-right-style: none;
}

.dcpAttribute__value--enumlabel {
  font-weight: normal;
  height: (@attrInputHeight - 2 );
}

.dcpAttribute__value--enumlabel.selected {
  background-color: @enum-selected-button-bg;
  color: @enum-selected-button-color;
}

.dcpAttribute__value--enumbuttons.orientation-horizontal,
.dcpAttribute__value--enumbuttons.orientation-bool {
  width: 100%;
  padding: 0;
  display: table;
}

.dcpAttribute__value--enumbuttons.orientation-horizontal.input-group,
.dcpAttribute__value--enumbuttons.orientation-bool.input-group {
  display: table;
  table-layout: fixed; /* same width for each item */
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  .k-checkbox-label {
    &:before {
      top: 6px;
    }
    &:after {
      top: 6px + 3px;
    }
  }
  .k-radio-label {
    &:before {
      top: 5px;
    }
    &:after {
      top: 5px + 3px;
    }
  }
}

.dcpAttribute__value--enumbuttons.dcpAttribute__content__nobutton.orientation-horizontal.input-group,
.dcpAttribute__value--enumbuttons.dcpAttribute__content__nobutton.orientation-bool.input-group {
  border-top-right-radius: @border-radius-base;
  border-bottom-right-radius: @border-radius-base;
}
.k-textbox.dcpAttribute__value--enumbuttons {
  &:hover {
    background-color:unset;
  }
}

.dcpAttribute__value--enumlabel.k-button {
  padding: 0 3px 0 3px;
}
.dcpAttribute__value--enumbuttons.orientation-horizontal.input-group .dcpAttribute__value--enumlabel
{
  display: table-cell;
  white-space: nowrap;

  border-radius: @border-radius-base;
  border: none;
  .dcpAttribute__value--enumlabel--text {
    width: ~"calc(100% - 1em)";
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-block;
    vertical-align: middle;
    text-align: left;

    margin: 0 0 0 0.3em;
  }
  input[type=radio], input[type=checkbox] {
    margin-right: 0.5em;
    margin-top: 0;
    float: none;
    display: inline-block;
    vertical-align: middle;
  }
}


.dcpAttribute__value--enumbuttons.orientation-bool.input-group .dcpAttribute__value--enumlabel {
  display: none;
  width: 100%;
  text-align: left;
}

.dcpAttribute__value--enumbuttons.orientation-bool.input-group .dcpAttribute__value--enumlabel span {
  padding-left: 1em;
}

.dcpAttribute__value--enumbuttons.orientation-bool .dcpAttribute__value--enumlabel.selected {
  display: inherit;
}

.dcpAttribute__value--enumbuttons.orientation-bool .dcpAttribute__value--enumlabel.unselected {
  display: inherit;
  background-color: inherit;
}

.dcpAttribute__value--enumbuttons.orientation-vertical {
  width: 100%;
  padding: 0;
  .dcpAttribute__value--enumlabel--other {
    padding-top:0;
  }
}

.dcpAttribute__value--enumbuttons.orientation-vertical.input-group {
  border-radius: @border-radius-base 0 0 @border-radius-base;


  label.dcpAttribute__value--enumlabel--text {
    line-height:2;
  }
  .k-checkbox-label {
    &:before {
      top: 4px;
    }
    &:after {
      top: 4px + 3px;
    }
  }
  .k-radio-label {
    &:before {
      top: 3px;
    }
    &:after {
      top: 3px + 3px;
    }
  }
}

.dcpAttribute__value--enumbuttons.orientation-vertical.input-group .dcpAttribute__value--enumlabel {
  display: block;
  text-align: left;
  white-space: nowrap;
  border-radius: inherit;
  border: none;
  padding-top: 0.2em;
  .dcpAttribute__value--enumlabel--text {
    overflow: hidden;
    text-overflow: ellipsis;
    width: ~"calc(100% - 1em)";
    margin:0;
  }

}

label.dcpAttribute__value--enumlabel--text {
  font-weight: normal;
  height:@dcp-input-height - 2;
  line-height: @dcp-input-height - 2;
}

.dcpAttribute__value--enumbuttons.input-group {
  .k-radio, .k-checkbox {
    display: inline;
    width: 0;
    position: absolute;

  }

}
.dcpAttribute__value--enumbuttons.input-group .dcpAttribute__value--enumlabel--other.dcpAttribute__value--enumlabel {
  text-overflow: initial;
    padding-top:0;
  .k-checkbox-label {
    &:before {
      top: 7px;
    }
    &:after {
      top:7px + 3px;
    }
  }
  .k-radio-label {
    &:before {
      top: 6px;
    }
    &:after {
      top: 6px + 3px;
    }
  }
  label.dcpAttribute__value--enumlabel--text {
    width:0;
  }

}
.dcpAttribute__value--enumbuttons.orientation-vertical.input-group .dcpAttribute__value--enumlabel .dcpAttribute__value--enumlabel--text {
  margin-left: 0.5em;
  display: inline-block;
  vertical-align: middle;
  /*width:100%*/
}



.dcpAttribute__value--enumbuttons.orientation-bool.input-group .dcpAttribute__value--enumlabel--text {
  display: inline-block;
}

.dcpAttribute__value--enum-other {
    border: none;
    padding: 1em;
  .dcpAttribute__value--enum-other-content {

  }
  input {
    width: 100%;
    margin-left: 0;
  }
  .btn  {
    float:right;
  }
}

.dcpAttribute__content--enum input.dcpAttribute__value--edit:not([aria-activedescendant]) {
  color:@brand-danger;

}

@dcpBoolAnimationDelay:1s;
.dcpAttribute__value--enumbuttons.orientation-bool {
  .dcpAttribute__value--toggle {

    width:100%;
    text-align: left;
    border:none;
    padding: 2px 0.5em 0 0.5em;
    position:relative;
    &.unselected {
       display:none;
    }


    .dcpAttribute__value--text {
      width: auto;
      min-width: 10em;
      display:inline-block;
      padding: 3px;
      border-radius: 1em;
      position:relative;
    }

    &.off {
      .dcpAttribute__value--text {
        color: @gray-light;
        background-color:@gray-lighter;
        padding-left:2.5em;
        transition: background-color @dcpBoolAnimationDelay, padding-left @dcpBoolAnimationDelay;

        &:before {
          transition: left @dcpBoolAnimationDelay;
          content: " ";
          display: inline-block;
          position:absolute;
          left:@border-radius-base;
          box-sizing: border-box;
          width: @dcp-input-height - 13px;
          height: @dcp-input-height - 13px;
          top: 5px;
          border: 3px solid white;
          border-radius: 50%;
          color: #f5f5f5;
          text-align: center;
          text-decoration: none;
          background: transparent;
          box-shadow: 0 0 3px gray;
          font-size: 20px;
          font-weight: bold;
        }
      }
    }

    &.on {
      .dcpAttribute__value--text {
        background-color:@enum-selected-button-bg;
        color:@enum-selected-button-color;
        font-weight: bold;
        padding-left:1em;
        padding-right: 2em;
        transition: background-color @dcpBoolAnimationDelay, padding-left @dcpBoolAnimationDelay;

        &:before  {
          content: " ";
          display: inline-block;
          box-sizing: border-box;
          margin-right:0.5em;
          transition: left @dcpBoolAnimationDelay;

          position:absolute;
          left:~"calc(100% - 1em - @{border-radius-base})";
          width: @dcp-input-height - 13px;
          height: @dcp-input-height - 13px;
          top: 5px;
          border: 3px solid #f5f5f5;
          border-radius: 50%;
          color: #f5f5f5;
          text-align: center;
          text-decoration: none;
          background: transparent;
          box-shadow: 0 0 3px gray;
          font-size: 20px;
          font-weight: bold;
        }
      }
    }
  }
}
