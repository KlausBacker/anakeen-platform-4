<?php
/*
 * @author Anakeen
 * @package FDL
*/

ini_set("pcre.jit", 0); // Need for PHP7.0 to compress big css files
require_once 'WHAT/Lib.Common.php';

$sty_desc = array(
    "name" => "DDUI", //Name
    "description" => "DDUI LESS STYLE", //long description
    
);
//produce global less file
$generateGlobalVarFile = function ()
{
    $globalVarFile = "STYLE/custom-less-variable.d/global_variables.less";
    $fullContent = "";
    $files = array();
    
    $iterator = new DirectoryIterator("STYLE/custom-less-variable.d/");
    foreach ($iterator as $fileinfo) {
        if (!$fileinfo->isFile()) {
            continue;
        }
        if ($fileinfo->getBasename() == 'global_variables.less') {
            continue;
        }
        if ($fileinfo->getExtension() === "less") {
            $files[$fileinfo->getPathname() ] = $fileinfo->getPathname();
        }
    }
    
    ksort($files);
    
    foreach ($files as $currentFiles) {
        $fullContent.= "// $currentFiles\n";
        $fullContent.= file_get_contents($currentFiles) . "\n";
    }
    if ((file_exists($globalVarFile) === false) || (($previousContent = file_get_contents($globalVarFile)) === false)) {
        $previousContent = '';
    }
    if ($fullContent !== $previousContent) {
        file_put_contents($globalVarFile, $fullContent);
    }
};

$generateGlobalScssVarFile = function ()
{
    $globalVarFile = "STYLE/custom-scss-variable.d/global_variables.scss";
    $fullContent = "";
    $files = array();

    $iterator = new DirectoryIterator("STYLE/custom-scss-variable.d/");
    foreach ($iterator as $fileinfo) {
        if (!$fileinfo->isFile()) {
            continue;
        }
        if ($fileinfo->getBasename() == 'global_variables.scss') {
            continue;
        }
        if ($fileinfo->getExtension() === "scss") {
            $files[$fileinfo->getPathname() ] = $fileinfo->getPathname();
        }
    }

    ksort($files);

    foreach ($files as $currentFiles) {
        $fullContent.= "// $currentFiles\n";
        $fullContent.= file_get_contents($currentFiles) . "\n";
    }
    if ((file_exists($globalVarFile) === false) || (($previousContent = file_get_contents($globalVarFile)) === false)) {
        $previousContent = '';
    }
    if ($fullContent !== $previousContent) {
        file_put_contents($globalVarFile, $fullContent);
    }
};


$generateGlobalVarFile();
$generateGlobalScssVarFile();
// global parameters which can be use for other css
$sty_rules = array(
    'css' => array(
        'dcp/document/bootstrap.css' => array(
            "src" => array(
                "bootstrap" => "STYLE/DDUI/dduiAssets/scss/bootstrap.scss",
                "fontAwesome" => "STYLE/DDUI/dduiAssets/scss/fontawesome.scss"
            ) ,
            "deploy_parser" => array(
                "className" => '\Dcp\Style\dcpScssParser',
                "options" => array(
                    "sourceMap" => true,
                    "sourceMapWriteTo" => 'public/css/dcp/document/bootstrap.map',
                    "sourceMapURL" => 'bootstrap.map',
                    "sourceRoot" => '../../../',
                    "compress" => true
                )
            )
        ) ,
        'dcp/document/kendo.css' => array(
            "src" => array(
                "kendo-bootstrap" => "STYLE/DDUI/dduiAssets/scss/kendo.bootstrap.scss",
            ) ,
            "deploy_parser" => array(
                "className" => '\Dcp\Style\dcpScssParser',
                "options" => array(
                    "sourceMap" => true,
                    "sourceMapWriteTo" => 'public/css/dcp/document/kendo.map',
                    "sourceMapURL" => 'kendo.map',
                    "sourceRoot" => '../../../',
                    "compress" => true
                )
            ) ,
        ) ,
        'dcp/document/document.css' => array(
            "src" => array(
                "document" => "STYLE/DDUI/dduiAssets/scss/document.scss"
            ) ,
            "deploy_parser" => array(
                "className" => '\Dcp\Style\dcpScssParser',
                "options" => array(
                    "sourceMap" => true,
                    "sourceMapWriteTo" => 'public/css/dcp/document/document.map',
                    "sourceMapURL" => 'document.map',
                    "sourceRoot" => '../../../',
                    "compress" => true
                )
            )
        ) ,
        'dcp/document/ckeditor.css' => array(
            "src" => array(
                "document" => "Apps/DOCUMENT/IHM/widgets/attributes/htmltext/ckeditor.scss"
            ) ,
            "deploy_parser" => array(
                "className" => '\Dcp\Style\dcpScssParser',
                "options" => array(
                    "sourceMap" => true,
                    "sourceMapWriteTo" => 'public/css/dcp/document/ckeditor.map',
                    "sourceMapURL" => 'ckeditor.map',
                    "sourceRoot" => '../../../',
                    "compress" => true
                )
            )
        )
    )
);
